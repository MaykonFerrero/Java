Ofuscadores em Java

O ofuscamento é um processo de transformar o bytecode em uma forma menos legível por humanos, dificultando assim a engenharia reversa. Esse processo consiste em remover informações relacionadas a depuração como tabelas de variáveis, número de linhas e renomear os pacotes, classes e métodos. As informações de depuração ajudam a depurar o código em execução, essas informações inseridas pelo javac podem conter informações como números de linhas, nomes de variáveis e nomes de arquivos fontes. Apesar das informações de depuração não serem necessárias para executar a classe, elas são utilizadas pelos depuradores para associar o bytecode ao código-fonte, o que ajuda na descompilação do código tornando-o muito semelhante ao original.
ntre os ofuscadores disponíveis temos o Klassmaster, Proguard, Retro Guard, Dash-O e JShrink. O Klassmaster e o Retro Guard são pagos, enquanto que o Proguard, Dash-O e JShrink são gratuitos.

O Klassmaster é o mais recomendado entre os pagos, oferecendo diversas funcionalidades como remoção de informações de depuração, desfiguração de nomes, codificação de strings, inserção de códigos corrompidos, eliminação de códigos não utilizados, otimização do bytecode, entre outras funcionalidades. Além disso, é o único que oferece alteração do fluxo de controle. Portanto, se tivermos disponível cerca de 200 dólares podemos investir nessa excelente ferramenta para realizar o ofuscamento de código.

O Proguard é a opção de ofuscador recomendado entre os gratuitos. Esta ferramenta oferece funcionalidades como remoção de informações de depuração, desfiguração de nomes e eliminação de código não utilizado. Essa ferramenta não oferece funcionalidades como codificação de strings, alteração de fluxo e inserção de código corrompido.
